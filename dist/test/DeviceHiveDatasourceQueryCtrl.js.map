{"version":3,"sources":["../../src/DeviceHiveDatasourceQueryCtrl.js"],"names":["converterManager","DeviceHiveDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","me","target","type","name","dataPath","converters","showHelp","converterName","push","argValues","getConverterDefaultValuesObject","index","splice","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,gCAAzB;;IAEMC,6B;;;AAEF;;;;;;;AAOA,2CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA,kKACnCF,MADmC,EAC3BC,SAD2B;;AAGzC,YAAME,UAAN;;AAEAA,WAAGC,MAAH,CAAUA,MAAV,GAAmBD,GAAGC,MAAH,CAAUA,MAAV,mBAAnB;AACAD,WAAGC,MAAH,CAAUC,IAAV,GAAiBF,GAAGC,MAAH,CAAUC,IAAV,aAAjB;AACAF,WAAGC,MAAH,CAAUE,IAAV,GAAiBH,GAAGC,MAAH,CAAUE,IAAV,MAAjB;AACAH,WAAGC,MAAH,CAAUG,QAAV,GAAqBJ,GAAGC,MAAH,CAAUG,QAAV,MAArB;AACAJ,WAAGC,MAAH,CAAUI,UAAV,GAAuBL,GAAGC,MAAH,CAAUI,UAAV,IAAwB,EAA/C;;AAEAL,WAAGM,QAAH,GAAc,KAAd;AAXyC;AAY5C;;;;uCAEcC,a,EAAe;AAC1B,gBAAMP,KAAK,IAAX;;AAEAA,eAAGC,MAAH,CAAUI,UAAV,CAAqBG,IAArB,CAA0B;AACtBL,sBAAMI,aADgB;AAEtBE,2BAAWd,iBAAiBe,+BAAjB,CAAiDH,aAAjD;AAFW,aAA1B;AAIH;;;0CAEiBI,K,EAAO;AACrB,gBAAMX,KAAK,IAAX;;AAEAA,eAAGC,MAAH,CAAUI,UAAV,CAAqBO,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;AACH;;AAED;;;;;;;;2CAKmB;AACf,gBAAMX,KAAK,IAAX;;AAEAA,eAAGa,SAAH,CAAaC,OAAb;AACH;;;;;;AAGLlB,8BAA8BmB,WAA9B;;kBAGenB,6B","file":"DeviceHiveDatasourceQueryCtrl.js","sourcesContent":["import './css/query-editor.css!';\nimport './DeviceHiveDirectives.js';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport ConverterManager from './ConverterManager.js';\n\nconst converterManager = new ConverterManager();\n\nclass DeviceHiveDatasourceQueryCtrl extends QueryCtrl {\n\n    /**\n     * Creates an instance of DeviceHiveDatasourceQueryCtrl.\n     * @param {any} $scope\n     * @param {any} $injector\n     * @param {any} uiSegmentSrv\n     * @memberof DeviceHiveDatasourceQueryCtrl\n     */\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        const me = this;\n\n        me.target.target = me.target.target || `select metric`;\n        me.target.type = me.target.type || `command`;\n        me.target.name = me.target.name || ``;\n        me.target.dataPath = me.target.dataPath || ``;\n        me.target.converters = me.target.converters || [];\n\n        me.showHelp = false;\n    }\n\n    onAddConverter(converterName) {\n        const me = this;\n\n        me.target.converters.push({\n            name: converterName,\n            argValues: converterManager.getConverterDefaultValuesObject(converterName)\n        });\n    }\n\n    onDeleteConverter(index) {\n        const me = this;\n\n        me.target.converters.splice(index, 1);\n    }\n\n    /**\n     * Refresh data every time query params change.\n     *\n     * @memberof DeviceHiveDatasourceQueryCtrl\n     */\n    onChangeInternal() {\n        const me = this;\n\n        me.panelCtrl.refresh();\n    }\n}\n\nDeviceHiveDatasourceQueryCtrl.templateUrl = `partials/query.editor.html`;\n\n\nexport default DeviceHiveDatasourceQueryCtrl;"]}