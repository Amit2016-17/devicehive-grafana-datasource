{"version":3,"sources":["../src/dh.js"],"names":["moment","DeviceHiveClient","login","password","serverURL","token","__socket","WebSocket","authInfo","Promise","resolve","addEventListener","event","Error","send","JSON","stringify","action","targets","deviceId","dateRange","extractedTargets","slice","reduce","obj","item","type","path","dataPath","scale","refId","types","Object","keys","results","request","length","commandNotificationHandler","messageData","parse","data","actions","split","includes","datas","forEach","points","__extractValue","push","utc","timestamp","format","sort","a","b","target","datapoints","pointsX","pointsY","pointsZ","map","value","azimuth","roll","pitch","removeEventListener","reject","createTokenPair","__authenticate","authHandler","status","__tokenMessage","then","accessToken","console","log","tokens","refreshToken","object","current","fields","filter","elem","field","undefined"],"mappings":"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","file":"dh.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport default class DeviceHiveClient {\r\n  /**\r\n   * Creates an instance of DeviceHiveClient.\r\n   * @param {Object} { login, password, serverURL, token } \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  constructor({ login, password, serverURL, token }){\r\n    if (serverURL && ((login && password) || token )) {\r\n      this.__socket = new WebSocket(serverURL);\r\n      this.authInfo = {\r\n        login,\r\n        password,\r\n        token\r\n      };\r\n      return new Promise((resolve) => {\r\n        this.__socket.addEventListener(`open`, (event) => {\r\n          resolve(this);\r\n        })\r\n      })\r\n    } else {\r\n      throw new Error(`You need to specify URL, login and password or token`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create token pair based on login\\password auth\r\n   * \r\n   * @param {String} login \r\n   * @param {String} password \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  createTokenPair(login, password){\r\n    this.__socket.send(JSON.stringify({\r\n      action : `token`,\r\n      login,\r\n      password\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Query data by passed params\r\n   * \r\n   * @param {Array[Object]} targets \r\n   * @param {String} deviceId \r\n   * @param {Object} dateRange \r\n   * @returns \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  queryData(targets, deviceId, dateRange){\r\n    return new Promise((resolve) => {\r\n      const extractedTargets = targets\r\n        .slice(0)\r\n        .reduce((obj, item) => {\r\n          if (!obj[item.type]){\r\n            obj[item.type] = [{ path : item.dataPath, scale : item.scale === `` ? 1 : item.scale, refId : item.refId }];\r\n          } else {\r\n            obj[item.type] = [\r\n              ...obj[item.type],\r\n              {\r\n                path : item.dataPath,\r\n                scale : item.scale === `` ? 1 : item.scale,\r\n                refId : item.refId\r\n              }\r\n            ];\r\n          }\r\n          return obj;\r\n        }, {});\r\n      const types = Object.keys(extractedTargets);\r\n      const results = [];\r\n      let request = types.length;\r\n      const commandNotificationHandler = (event) => {\r\n        const messageData = JSON.parse(event.data);\r\n        const actions = messageData.action.split(`/`);\r\n        if (types.includes(actions[0]) && actions[1] === `list`){\r\n          request--;\r\n          const datas = messageData[`${actions[0]}s`];\r\n          extractedTargets[actions[0]].forEach(({ path, scale, refId }) => {\r\n            if (!path.includes(`Orient`)){\r\n              const points = [];\r\n              datas.forEach(data => {\r\n                if (typeof this.__extractValue(data, path) !== `object`){\r\n                  points.push([this.__extractValue(data, path) * scale, +moment.utc(data.timestamp).format(`x`)]);\r\n                }\r\n              });\r\n              points.sort((a, b) => a[1] - b[1]);\r\n              results.push({\r\n                target : `${actions[0]}${refId}`,\r\n                datapoints : points\r\n              })\r\n            } else {\r\n              const pointsX = [];\r\n              const pointsY = [];\r\n              const pointsZ = [];\r\n              datas.forEach(data => {\r\n                if (typeof this.__extractValue(data, path) !== `object`){\r\n                  const [azimuth, roll, pitch] = this.__extractValue(data, path).split(`,`).map(value => +value);\r\n                  pointsX.push([azimuth, +moment.utc(data.timestamp).format(`x`)]);\r\n                  pointsY.push([pitch, +moment.utc(data.timestamp).format(`x`)]);\r\n                  pointsZ.push([roll, +moment.utc(data.timestamp).format(`x`)]);\r\n                }\r\n              });\r\n              pointsX.sort((a, b) => a[1] - b[1]);\r\n              pointsY.sort((a, b) => a[1] - b[1]);\r\n              pointsZ.sort((a, b) => a[1] - b[1]);\r\n\r\n              results.push({\r\n                target : `X`,\r\n                datapoints : [[pointsX[0][0]], [0]]\r\n              });\r\n              results.push({\r\n                target : `Y`,\r\n                datapoints : [[pointsY[0][0]], [0]]\r\n              });\r\n              results.push({\r\n                target : `Z`,\r\n                datapoints : [[pointsZ[0][0]], [0]]\r\n              });\r\n            }\r\n          })\r\n          if (!request){\r\n            this.__socket.removeEventListener(`message`, commandNotificationHandler);\r\n            resolve({\r\n              data : results\r\n            })\r\n          }\r\n        }\r\n      }\r\n      this.__socket.addEventListener(`message`, commandNotificationHandler);\r\n      types.forEach(type => \r\n        this.__socket.send(JSON.stringify({\r\n          action : `${type}/list`,\r\n          deviceId : deviceId\r\n        }))\r\n      );\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Function used to test datasource connection and auth\r\n   * \r\n   * @returns \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  testDatasource(){\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authInfo.token){\r\n        this.createTokenPair(this.authInfo.login, this.authInfo.password);\r\n      } else {\r\n        this.__authenticate(this.authInfo.token);\r\n      }\r\n      const authHandler = (event) => {\r\n        const messageData = JSON.parse(event.data);\r\n        if ((messageData.action === `token` || messageData.action === `authenticate`) && messageData.status === `success`){\r\n          switch (messageData.action) {\r\n          case `token` : \r\n            return this.__tokenMessage(messageData)\r\n              .then((accessToken) => this.__authenticate(accessToken));\r\n          case `authenticate`:\r\n            this.__socket.removeEventListener(`message`, authHandler);\r\n            return resolve();\r\n          }\r\n        } else {\r\n          if (messageData.status === `error`){\r\n            console.log(messageData);\r\n            this.__socket.removeEventListener(`message`, authHandler);\r\n            reject(messageData);\r\n          }\r\n        }\r\n      }\r\n      this.__socket.addEventListener(`message`, authHandler);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Internal handler on `token` type message\r\n   * \r\n   * @param {Object} messageData \r\n   * @returns \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  __tokenMessage(messageData){\r\n    this.tokens = {\r\n      accessToken : messageData.accessToken,\r\n      refreshToken : messageData.refreshToken\r\n    }\r\n    return Promise.resolve(this.tokens.accessToken);\r\n  }\r\n  \r\n  /**\r\n   * Internal `authenticate` message sender\r\n   * \r\n   * @param {String} accessToken \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  __authenticate(accessToken){\r\n    this.__socket.send(JSON.stringify({\r\n      action : `authenticate`,\r\n      token : accessToken\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Internal function to extract value from object based on path\r\n   * \r\n   * @param {Object} object \r\n   * @param {String} path \r\n   * @returns \r\n   * @memberof DeviceHiveClient\r\n   */\r\n  __extractValue(object, path){\r\n    let current = object;\r\n    const fields = path.split(/[\\.\\[\\]]/).filter(elem => elem !== ``);\r\n    fields.forEach(field => {\r\n      if (current[field] !== undefined){\r\n        current = current[field];\r\n      } else {\r\n        current = null;\r\n      }\r\n    })\r\n    return (typeof current === `string` && !path.includes(`Orient`)) ? +current : current;\r\n  }\r\n}\r\n"]}