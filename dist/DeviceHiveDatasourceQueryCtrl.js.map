{"version":3,"sources":["../src/DeviceHiveDatasourceQueryCtrl.js"],"names":["QueryCtrl","ConverterManager","converterManager","DeviceHiveDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","me","target","type","name","dataPath","converters","showHelp","converterName","push","argValues","getConverterDefaultValuesObject","index","splice","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAESA,qB,kBAAAA,S;;AACFC,4B;;;;;;;;;;;;;;;;;;;;;AAEDC,4B,GAAmB,IAAID,gBAAJ,E;;AAEnBE,yC;;;AAEF;;;;;;;AAOA,uDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAAA;;AAAA,8KACnCF,MADmC,EAC3BC,SAD2B;;AAGzC,wBAAME,UAAN;;AAEAA,uBAAGC,MAAH,CAAUA,MAAV,GAAmBD,GAAGC,MAAH,CAAUA,MAAV,mBAAnB;AACAD,uBAAGC,MAAH,CAAUC,IAAV,GAAiBF,GAAGC,MAAH,CAAUC,IAAV,aAAjB;AACAF,uBAAGC,MAAH,CAAUE,IAAV,GAAiBH,GAAGC,MAAH,CAAUE,IAAV,MAAjB;AACAH,uBAAGC,MAAH,CAAUG,QAAV,GAAqBJ,GAAGC,MAAH,CAAUG,QAAV,MAArB;AACAJ,uBAAGC,MAAH,CAAUI,UAAV,GAAuBL,GAAGC,MAAH,CAAUI,UAAV,IAAwB,EAA/C;;AAEAL,uBAAGM,QAAH,GAAc,KAAd;AAXyC;AAY5C;;;;mDAEcC,a,EAAe;AAC1B,4BAAMP,KAAK,IAAX;;AAEAA,2BAAGC,MAAH,CAAUI,UAAV,CAAqBG,IAArB,CAA0B;AACtBL,kCAAMI,aADgB;AAEtBE,uCAAWd,iBAAiBe,+BAAjB,CAAiDH,aAAjD;AAFW,yBAA1B;AAIH;;;sDAEiBI,K,EAAO;AACrB,4BAAMX,KAAK,IAAX;;AAEAA,2BAAGC,MAAH,CAAUI,UAAV,CAAqBO,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;AACH;;;uDAOkB;AACf,4BAAMX,KAAK,IAAX;;AAEAA,2BAAGa,SAAH,CAAaC,OAAb;AACH;;;;cA/CuCrB,S;;AAkD5CG,0CAA8BmB,WAA9B;;+BAGenB,6B","file":"DeviceHiveDatasourceQueryCtrl.js","sourcesContent":["import './css/query-editor.css!';\nimport './DeviceHiveDirectives.js';\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport ConverterManager from './ConverterManager.js';\n\nconst converterManager = new ConverterManager();\n\nclass DeviceHiveDatasourceQueryCtrl extends QueryCtrl {\n\n    /**\n     * Creates an instance of DeviceHiveDatasourceQueryCtrl.\n     * @param {any} $scope\n     * @param {any} $injector\n     * @param {any} uiSegmentSrv\n     * @memberof DeviceHiveDatasourceQueryCtrl\n     */\n    constructor($scope, $injector, uiSegmentSrv) {\n        super($scope, $injector);\n\n        const me = this;\n\n        me.target.target = me.target.target || `select metric`;\n        me.target.type = me.target.type || `command`;\n        me.target.name = me.target.name || ``;\n        me.target.dataPath = me.target.dataPath || ``;\n        me.target.converters = me.target.converters || [];\n\n        me.showHelp = false;\n    }\n\n    onAddConverter(converterName) {\n        const me = this;\n\n        me.target.converters.push({\n            name: converterName,\n            argValues: converterManager.getConverterDefaultValuesObject(converterName)\n        });\n    }\n\n    onDeleteConverter(index) {\n        const me = this;\n\n        me.target.converters.splice(index, 1);\n    }\n\n    /**\n     * Refresh data every time query params change.\n     *\n     * @memberof DeviceHiveDatasourceQueryCtrl\n     */\n    onChangeInternal() {\n        const me = this;\n\n        me.panelCtrl.refresh();\n    }\n}\n\nDeviceHiveDatasourceQueryCtrl.templateUrl = `partials/query.editor.html`;\n\n\nexport default DeviceHiveDatasourceQueryCtrl;"]}